"""Initial create

Revision ID: 1f57c44826a6
Revises: 
Create Date: 2025-10-31 11:51:05.679004

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1f57c44826a6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task', sa.String(), nullable=True),
    sa.Column('state', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_sessions_id'), 'agent_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_agent_sessions_task'), 'agent_sessions', ['task'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('prompt', sa.Text(), nullable=True),
    sa.Column('tools', sa.JSON(), nullable=True),
    sa.Column('code', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_agents_id'), 'agents', ['id'], unique=False)
    op.create_table('models_of_ai',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('model_identifier', sa.String(length=255), nullable=True),
    sa.Column('api_key', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_models_of_ai_id'), 'models_of_ai', ['id'], unique=False)
    op.create_table('agent_model_link',
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models_of_ai.id'], ),
    sa.PrimaryKeyConstraint('agent_id', 'model_id')
    )
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nodes_id'), 'nodes', ['id'], unique=False)
    op.create_table('graphs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('entry_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entry_node_id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_graphs_id'), 'graphs', ['id'], unique=False)
    op.create_table('chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('graph_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['graph_id'], ['graphs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chats_id'), 'chats', ['id'], unique=False)
    op.create_table('edges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_node_id', sa.Integer(), nullable=False),
    sa.Column('to_node_id', sa.Integer(), nullable=False),
    sa.Column('graph_id', sa.Integer(), nullable=False),
    sa.Column('condition', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['from_node_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['graph_id'], ['graphs.id'], ),
    sa.ForeignKeyConstraint(['to_node_id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_edges_id'), 'edges', ['id'], unique=False)
    op.create_table('graph_node_link',
    sa.Column('graph_id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['graph_id'], ['graphs.id'], ),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('graph_id', 'node_id')
    )
    op.create_table('chat_agent_link',
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.PrimaryKeyConstraint('chat_id', 'agent_id')
    )
    op.create_table('graph_execution_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.Column('graph_id', sa.Integer(), nullable=True),
    sa.Column('execution_timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('execution_path', sa.JSON(), nullable=True),
    sa.Column('node_outputs', sa.JSON(), nullable=True),
    sa.Column('manager_decisions', sa.JSON(), nullable=True),
    sa.Column('total_duration_ms', sa.Integer(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('audit_trail', sa.JSON(), nullable=True),
    sa.Column('flow_steps', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['graph_id'], ['graphs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_table('graph_execution_logs')
    op.drop_table('chat_agent_link')
    op.drop_table('graph_node_link')
    op.drop_index(op.f('ix_edges_id'), table_name='edges')
    op.drop_table('edges')
    op.drop_index(op.f('ix_chats_id'), table_name='chats')
    op.drop_table('chats')
    op.drop_index(op.f('ix_graphs_id'), table_name='graphs')
    op.drop_table('graphs')
    op.drop_index(op.f('ix_nodes_id'), table_name='nodes')
    op.drop_table('nodes')
    op.drop_table('agent_model_link')
    op.drop_index(op.f('ix_models_of_ai_id'), table_name='models_of_ai')
    op.drop_table('models_of_ai')
    op.drop_index(op.f('ix_agents_id'), table_name='agents')
    op.drop_table('agents')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_agent_sessions_task'), table_name='agent_sessions')
    op.drop_index(op.f('ix_agent_sessions_id'), table_name='agent_sessions')
    op.drop_table('agent_sessions')
    # ### end Alembic commands ###
